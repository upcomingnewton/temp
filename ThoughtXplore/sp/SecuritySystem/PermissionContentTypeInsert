CREATE OR REPLACE FUNCTION Security_PermissionContentType_Delete(
Perm_id INTEGER,
PermContentType_id INTEGER,
by_user INTEGER,
ip VARCHAR,
OUT result INTEGER,
OUT rescode INTEGER
) RETURNS RECORD AS $$
DECLARE 
    temp INTEGER;
    active INTEGER;
    ctid INTEGER;
BEGIN 
temp := 0;
INSERT INTO "txMisc_permissioncontenttype"(
            id, "Permission_id", "PermissionContentType_id", "PermissionActive")
    VALUES (?, ?, ?, ?);

IF EXISTS ( SELECT id FROM "txMisc_permissioncontenttype" WHERE "Permission_id"=Perm_id AND "PermissionContentType_id"=PermContentType_id AND "PermissionActive"=1 ) THEN
		result := 2;
  		rescode := 71;
		RETURN;
END IF;


IF EXISTS ( SELECT id FROM "txMisc_permissioncontenttype" WHERE "Permission_id"=Perm_id AND "PermissionContentType_id"=PermContentType_id AND "PermissionActive"=0 ) THEN
		result := 2;
  		rescode := 71;
		RETURN;
END IF;

	IF active == 0 THEN
	END IF;

END IF;


IF active <> 1 THEN 
	result := 2;
	rescode := 62;
	RETURN;
END IF;

UPDATE "txMisc_permissioncontenttype"
  SET  "PermissionActive"=0
 WHERE id=id_to_delete;
GET DIAGNOSTICS temp := ROW_COUNT;
IF temp <> 1 THEN 
	rescode := 63;
	result := -1;
        RETURN;
END IF;


SELECT id INTO ctid FROM django_content_type WHERE app_label='txMisc' AND model ='permissioncontenttype';

INSERT INTO "txMisc_securitylogs"(id, "User", "ContentType_id", "TimeStamp", ip, "Desc")
VALUES(id_to_delete,by_user,ctid,now(),ip,'permissioncontenttype delete');
GET DIAGNOSTICS temp := ROW_COUNT;
IF temp <> 1 THEN 
	rescode := 999;
	result := -1;
        RETURN;
ELSE
	rescode := 65;
	result := 1;
RETURN;
END IF;


RETURN;
END;
$$ LANGUAGE plpgsql;
