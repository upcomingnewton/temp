CREATE OR REPLACE FUNCTION Security_PermissionContentType_Delete(
Perm_id INTEGER,
PermContentType_id INTEGER,
by_user INTEGER,
ip VARCHAR,
OUT result INTEGER,
OUT rescode INTEGER
) RETURNS RECORD AS $$
DECLARE 
    temp INTEGER;
    active INTEGER;
    tempid INTEGER;
    ctid INTEGER;
BEGIN 
temp := 0;


IF EXISTS ( SELECT id FROM "txMisc_permissioncontenttype" WHERE "Permission_id"=Perm_id AND "PermissionContentType_id"=PermContentType_id AND "PermissionActive"=1 ) THEN
		result := 2;
  		rescode := 71;
		RETURN;
END IF;


IF EXISTS ( SELECT id FROM "txMisc_permissioncontenttype" WHERE "Permission_id"=Perm_id AND "PermissionContentType_id"=PermContentType_id AND "PermissionActive"=0 ) THEN
		DELETE FROM "txMisc_permissioncontenttype"  WHERE "Permission_id"=Perm_id AND "PermissionContentType_id"=PermContentType_id;
		GET DIAGNOSTICS temp := ROW_COUNT;
		IF temp <> 1 THEN 
			rescode := 73;
			result := -1;
        	RETURN;
        END IF;
END IF;


INSERT INTO "txMisc_permissioncontenttype"("Permission_id", "PermissionContentType_id", "PermissionActive")
    									VALUES (Perm_id,PermContentType_id,1);
GET DIAGNOSTICS temp := ROW_COUNT;
IF temp <> 1 THEN 
	rescode := 74;
	result := -1;
        RETURN;
END IF;

SELECT id INTO tempid FROM "txMisc_permissioncontenttype" WHERE  "Permission_id"=Perm_id AND "PermissionContentType_id"=PermContentType_id;
SELECT id INTO ctid FROM django_content_type WHERE app_label='txMisc' AND model ='permissioncontenttype';

INSERT INTO "txMisc_securitylogs"(id, "User", "ContentType_id", "TimeStamp", ip, "Desc")
VALUES(tempid,by_user,ctid,now(),ip,'insert txMisc_permissioncontenttype');
GET DIAGNOSTICS temp := ROW_COUNT;
IF temp <> 1 THEN 
	rescode := 999;
	result := -1;
        RETURN;
ELSE
	rescode := 75;
	result := 1;
RETURN;
END IF;


RETURN;
END;
$$ LANGUAGE plpgsql;
