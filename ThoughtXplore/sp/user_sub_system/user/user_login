CREATE OR REPLACE FUNCTION user_login
(
	emailid VARCHAR,
	password VARCHAR,
	login_type INTEGER,
	ip VARCHAR,
	time_stamp timestamp with time zone,
	OUT userid INTEGER,
	OUT user_status INTEGER,
	OUT loginid INTEGER,
	OUT groupid INTEGER,
	OUT result INTEGER,
	OUT rescode INTEGER
) 
RETURNS RECORD AS $$
DECLARE
	user__id INTEGER;
	varrec RECORD;
	varrec1 RECORD;
	login_type_int INTEGER;
	temp INTEGER;
BEGIN 

IF NOT EXISTS ( SELECT id FROM "txUser_user" WHERE "UserEmail"=emailid ) THEN
	result := -1;
	rescode = 2101;
	groupid := -1;
	loginid := -1;
	user_status := -1;
	userid := -1;
	RETURN;
END IF;

IF NOT EXISTS ( SELECT id FROM "txUser_user" WHERE "UserEmail"=emailid AND "UserPassword"=password ) THEN
	result := -1;
	rescode = 2102;
	groupid := -1;
	loginid := -1;
	user_status := -1;
	userid := -1;
	RETURN;
END IF;

SELECT id INTO user__id FROM "txUser_user" WHERE "UserEmail"=emailid;
SELECT * INTO varrec FROM  checkstatus('txUser_user','ACTIVE',user__id);
user_status := varrec.scid;
SELECT "Group_id" INTO groupid FROM "txUser_usergroup" WHERE "User_id"=user__id;


SELECT id INTO login_type_int FROM "txUser_logintype" WHERE id=login_type;
IF login_type_int IS NULL THEN 
	rescode := 2103;
	result := -1;
	userid := user__id;	
	loginid := -1;
	SELECT "Group_id" INTO groupid FROM "txUser_usergroup" WHERE "User_id"=user__id;
	RETURN;
END IF;


SELECT * INTO varrec1 FROM  checkstatus('txUser_logintype','ACTIVE',login_type_int);
IF varrec1.result <> 1000 THEN 
	rescode := varrec1.result;
	result := -7;
	userid := user__id;	
	loginid := -1;
	SELECT "Group_id" INTO groupid FROM "txUser_usergroup" WHERE "User_id"=user__id;
	RETURN;
END IF;

INSERT INTO "txUser_userloginlog"(user_id,"Login_From_id","LoginTime","LoginIP","LogoutTime","Logout_From")
VALUES(user__id,login_type_int,time_stamp,ip,now(),login_type_int);
GET DIAGNOSTICS temp := ROW_COUNT;
IF temp <> 1 THEN 
	rescode := 2104;
	result := -1;
	user_status := varrec.scid;
	userid := user__id;	
	loginid := -1;
	SELECT "Group_id" INTO groupid FROM "txUser_usergroup" WHERE "User_id"=user__id;
	RETURN;
ELSE
	rescode := 2105;
	result := 1;
	user_status := varrec.scid;
	userid := user__id;	
	SELECT id INTO loginid FROM "txUser_userloginlog" WHERE user_id=user__id AND "LoginIP"=ip AND "LoginTime"=time_stamp;
	SELECT "Group_id" INTO groupid FROM "txUser_usergroup" WHERE "User_id"=user__id;
	RETURN;
END IF;
RETURN;
END;
$$ LANGUAGE plpgsql;